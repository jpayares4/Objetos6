/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import clase.Cafetera;
import javax.swing.JOptionPane;

/**
 *
 * @author Payares
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtC_Maxima = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtC_Actual = new javax.swing.JTextField();
        lblDefecto = new javax.swing.JLabel();
        cmdCambiarValores = new javax.swing.JButton();
        cmdAgregarCafe = new javax.swing.JButton();
        cmdLlenarCafetera = new javax.swing.JButton();
        cmdServirTaza = new javax.swing.JButton();
        cmdVaciarCafetera = new javax.swing.JButton();
        cmdLimpiar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Control de cafe");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 0, 130, -1));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Cafetera"));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Capacidad Maxima:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        txtC_Maxima.setEditable(false);
        txtC_Maxima.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        txtC_Maxima.setText("1000");
        txtC_Maxima.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtC_MaximaKeyTyped(evt);
            }
        });
        jPanel2.add(txtC_Maxima, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 100, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Capacidad Actual:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        txtC_Actual.setEditable(false);
        txtC_Actual.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        txtC_Actual.setText("0");
        txtC_Actual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtC_ActualActionPerformed(evt);
            }
        });
        txtC_Actual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtC_ActualKeyTyped(evt);
            }
        });
        jPanel2.add(txtC_Actual, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 100, 30));

        lblDefecto.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblDefecto.setText("valores predeterminado:");
        jPanel2.add(lblDefecto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        cmdCambiarValores.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cmdCambiarValores.setText("Cambiar ");
        cmdCambiarValores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCambiarValoresActionPerformed(evt);
            }
        });
        jPanel2.add(cmdCambiarValores, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        cmdAgregarCafe.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cmdAgregarCafe.setText("Agregar Café");
        cmdAgregarCafe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAgregarCafeActionPerformed(evt);
            }
        });
        jPanel2.add(cmdAgregarCafe, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 130, -1));

        cmdLlenarCafetera.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cmdLlenarCafetera.setText("Llenar Cafetera");
        cmdLlenarCafetera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLlenarCafeteraActionPerformed(evt);
            }
        });
        jPanel2.add(cmdLlenarCafetera, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 130, -1));

        cmdServirTaza.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cmdServirTaza.setText("Servir taza");
        cmdServirTaza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdServirTazaActionPerformed(evt);
            }
        });
        jPanel2.add(cmdServirTaza, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, 90, -1));

        cmdVaciarCafetera.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cmdVaciarCafetera.setText("Vaciar cafetera");
        cmdVaciarCafetera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdVaciarCafeteraActionPerformed(evt);
            }
        });
        jPanel2.add(cmdVaciarCafetera, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, 130, -1));

        cmdLimpiar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cmdLimpiar.setText("Limpiar");
        cmdLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLimpiarActionPerformed(evt);
            }
        });
        jPanel2.add(cmdLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 220, 80, -1));

        jButton1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 250, 60, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 300, 290));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtC_MaximaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtC_MaximaKeyTyped
        char c = evt.getKeyChar();

        if ((!Character.isDigit(c)) && (evt.getKeyChar() != '.')) {
            getToolkit().beep();
            evt.consume();

        }
        if (evt.getKeyChar() == '.' && txtC_Maxima.getText().contains(".")) {
            getToolkit().beep();
            evt.consume();

        }
    }//GEN-LAST:event_txtC_MaximaKeyTyped

    private void txtC_ActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtC_ActualActionPerformed

    }//GEN-LAST:event_txtC_ActualActionPerformed

    private void txtC_ActualKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtC_ActualKeyTyped
        char c = evt.getKeyChar();

        if ((!Character.isDigit(c)) && (evt.getKeyChar() != '.')) {
            getToolkit().beep();
            evt.consume();

        }
        if (evt.getKeyChar() == '.' && txtC_Actual.getText().contains(".")) {
            getToolkit().beep();
            evt.consume();

        }
    }//GEN-LAST:event_txtC_ActualKeyTyped

    private void cmdCambiarValoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCambiarValoresActionPerformed
        Cafetera c;
        double cm, ca;
        if (txtC_Maxima.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Digite Capacidad maxima", "error", JOptionPane.ERROR_MESSAGE);
            txtC_Maxima.requestFocusInWindow();
        } else if (Integer.parseInt(txtC_Maxima.getText().trim())==0){
            JOptionPane.showMessageDialog(this, "El número de capacidad maxima no puede ser 0","error",JOptionPane.ERROR_MESSAGE);
            txtC_Maxima.requestFocusInWindow();
            txtC_Maxima.selectAll();
        }
        else if (txtC_Actual.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Digite cantidad actual", "error", JOptionPane.ERROR_MESSAGE);
            txtC_Actual.requestFocusInWindow();
        } else{
            cm = Double.parseDouble(txtC_Maxima.getText());
            ca = Double.parseDouble(txtC_Actual.getText());
            if (ca > cm) {
                JOptionPane.showMessageDialog(this, "La cantidad actual no puede superar a la capacidad maxima", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                c = new Cafetera(cm, ca);
                JOptionPane.showMessageDialog(this, "Valores Actualizados");
                cmdCambiarValores.setEnabled(false);
                txtC_Actual.setEditable(false);
                txtC_Maxima.setEditable(false);
                cmdAgregarCafe.setEnabled(true);
                cmdLimpiar.setEnabled(true);
                cmdLlenarCafetera.setEnabled(true);
                cmdServirTaza.setEnabled(true);
                cmdVaciarCafetera.setEnabled(true);
                lblDefecto.setText("");
            }
        }
    }//GEN-LAST:event_cmdCambiarValoresActionPerformed

    private void cmdAgregarCafeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAgregarCafeActionPerformed
        int sw = 1;
        double ca, cant, cm;
        cm =Double.parseDouble(txtC_Maxima.getText());
        cant = Double.parseDouble(txtC_Actual.getText());
        Cafetera c, t;
        do {
            try {
                double cafe = Double.parseDouble(JOptionPane.showInputDialog(this, "Digite Cantidad de cafe"));
                c = new Cafetera(cm, cant);
                t = c.agregarCafe( cafe);
                ca = t.getCantidadActual();
                txtC_Actual.setText(String.valueOf(ca));
                JOptionPane.showMessageDialog(this, "cafe agregado");
                sw = 1;
            }catch (NumberFormatException e){
                JOptionPane.showMessageDialog(this, "digite un numero valido","Error",JOptionPane.ERROR_MESSAGE);
                sw=0;}
            catch (NullPointerException e) {
                int res = JOptionPane.showConfirmDialog(this, "¿Seguro que desea salir?", "Salir", JOptionPane.YES_NO_OPTION);
                if (res == 0) {
                    sw = 1;
                } else {
                    sw = 0;
                }
            }
        } while (sw == 0);
    }//GEN-LAST:event_cmdAgregarCafeActionPerformed

    private void cmdLlenarCafeteraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLlenarCafeteraActionPerformed
        Cafetera c;
        String llenado;
        double cm, ca;
        cm = Double.parseDouble(txtC_Maxima.getText());
        ca = Double.parseDouble(txtC_Actual.getText());
        c = new Cafetera();
        llenado = c.llenarCafetera();

        JOptionPane.showMessageDialog(this, llenado);
        txtC_Actual.setText(txtC_Maxima.getText());
    }//GEN-LAST:event_cmdLlenarCafeteraActionPerformed

    private void cmdServirTazaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdServirTazaActionPerformed
        int sw = 1;
        double ca, cant, cm;
        cm = Double.parseDouble(txtC_Maxima.getText());
        cant = Double.parseDouble(txtC_Actual.getText());
        Cafetera c, t;
        do {
            try {
                double taza = Double.parseDouble(JOptionPane.showInputDialog(this, "Digite Cantidad de la taza"));
                c = new Cafetera(cm, cant);
                t = c.llenarTaza((int) taza);
                if (Double.parseDouble(txtC_Actual.getText()) == 0) {
                    JOptionPane.showMessageDialog(this, "La cantidad actual es 0 llene la cafetera para\n poder servir la taza");
                } else if (t.getCantidadActual() == 0) {
                    JOptionPane.showMessageDialog(this, "La cantidad indicada es mayor a la cantidad actual o es igual a la canttidad actual, se llenará\n"
                        + "con lo que quede");
                    ca = t.getCantidadActual();
                    txtC_Actual.setText(String.valueOf(ca));
                } else {
                    ca = t.getCantidadActual();
                    txtC_Actual.setText(String.valueOf(ca));
                    JOptionPane.showMessageDialog(this, "taza llenada");

                }
                sw = 1;
            } catch (NumberFormatException e){
                JOptionPane.showMessageDialog(this, "digite un numero valido","Error",JOptionPane.ERROR_MESSAGE);
                sw=0;
            }
            catch (NullPointerException e) {
                int res = JOptionPane.showConfirmDialog(this, "¿Seguro que deseas salir?", "Salir", JOptionPane.YES_NO_OPTION);
                if (res == 0) {
                    sw = 1;
                } else {
                    sw = 0;
                }
            }
        } while (sw == 0);
    }//GEN-LAST:event_cmdServirTazaActionPerformed

    private void cmdVaciarCafeteraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdVaciarCafeteraActionPerformed
        Cafetera c, t;
        double ca;
        c = new Cafetera();
        t = c.vaciarCafetera();
        ca = t.getCantidadActual();
        txtC_Actual.setText(String.valueOf(ca));
        JOptionPane.showMessageDialog(this, "Cafetera vaciada");
    }//GEN-LAST:event_cmdVaciarCafeteraActionPerformed

    private void cmdLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLimpiarActionPerformed
        cmdCambiarValores.setEnabled(true);
        cmdLlenarCafetera.setEnabled(false);
        cmdServirTaza.setEnabled(false);
        cmdVaciarCafetera.setEnabled(false);
        cmdLimpiar.setEnabled(true);
        cmdAgregarCafe.setEnabled(false);
        lblDefecto.setText("Estos valores estan por defecto debe cambiarlos");
        txtC_Actual.setText("0");
        txtC_Maxima.setText("1000");
        txtC_Maxima.selectAll();
        txtC_Maxima.requestFocusInWindow();
    }//GEN-LAST:event_cmdLimpiarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdAgregarCafe;
    private javax.swing.JButton cmdCambiarValores;
    private javax.swing.JButton cmdLimpiar;
    private javax.swing.JButton cmdLlenarCafetera;
    private javax.swing.JButton cmdServirTaza;
    private javax.swing.JButton cmdVaciarCafetera;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblDefecto;
    private javax.swing.JTextField txtC_Actual;
    private javax.swing.JTextField txtC_Maxima;
    // End of variables declaration//GEN-END:variables
}
